#!/usr/bin/perl

print "Content-type: text/html\n\n";

read(STDIN,$temp,$ENV{'CONTENT_LENGTH'});

@pairs=split(/&/,$temp);

foreach $item(@pairs){
   ($key,$content)=split(/=/,$item,2);
   $content=~tr /+/ /;
   $content=~ s/%(..)/pack("c",hex($1))/ge;
   if (!defined($input{$key})){
      $input{$key}=$content;
   }else{
      $input{$key} .= "\0$content";
   }
}

# Who created this login...
$user_name = $input{user_name};

if ($user_name eq ''){
   printf "<a href='http://cpiq.canpar.com'>Please login to prceed!</a>";
   die;
}

print "<html>
   <head>
      
      
   </head>
   
   <body>";


print "<h3><b>This Login Has Been Generated By: $user_name </b></h3><br>";

if ($input{delete} eq "yes"){#user is to be deleted
   print "<b>Disabling...</b> $input{LoginName}<br><br>";
$LoginFullName = $input{LoginName};
$input{LoginName} =~ s/\s*$//g;
$input{LoginName} =~ s/\s/_/g;
$input{LoginName} = lc($input{LoginName});

print "<BR>***Attempting to disable the login in Production***<BR>";

$sqlErrorDropping1 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SPROD <<EOF 2>&1
use master
go
select '<BR><font size="3" color="red">Finally Disabling Login From Server, Please Make Sure That The Following Says Login Locked</font><BR>'
EXEC sp_locklogin $input{LoginName},'lock'
go
exit
EOF
`;

print "<BR>$sqlErrorDropping1<BR>";

print "<BR>***Attempting to disable the login in Standby***<BR>";
print "<BR>You Do Not Need To Wait For The Following To Complete...<BR>";
sleep(10);

$sqlErrorDropping2 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SSTBY <<EOF 2>&1
use master
go
select '<BR><font size="3" color="red">Finally Disabling Login From Server, Please Make Sure That The Following Says Login Dropped</font><BR>'
go
EXEC sp_locklogin $input{LoginName},'lock'
go
exit
EOF
`;
print "<BR>$sqlErrorDropping2<BR>";

$currDate=((localtime())[5]+1900)."/".sprintf('%02d',((localtime())[4]+1))."/".sprintf('%02d',((localtime())[3]));
$currHour=sprintf('%02d',((localtime())[2]));
$currMin =sprintf('%02d',((localtime())[1]));

`mail -s "Login Disable Occurred!!!" akhan\@canpar.com,CANPARDatabaseAdministratorsStaffList\@canpar.com,BSmallwood\@canpar.com <<EOF
\*\*\*\!\!\!Login Disable Occurred\!\!\!\*\*\*

Login: $input{LoginName}
$sqlErrorDropping1
==============
$sqlErrorDropping2
Dated: $currDate\--$currHour\:$currMin
EOF
`;

}else{#user is to be added

print "<b>Full Name:</b> $input{LoginName}<br><br>";
$LoginFullName = $input{LoginName};
$input{LoginName} =~ s/\s*$//g;
$input{LoginName} =~ s/\s/_/g;
$input{LoginName} = lc($input{LoginName});
print "<b>Creating Login:</b> $input{LoginName}<br><br>";
print "<b>Password:</b>canpar<br><br>";


print "<br><br>========================== Results ========================<br><br>";

print "<BR>***Attempting to create a new login in Production***<BR>";

$sqlErrorCP1 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SPROD <<EOF 2>&1
use master
go
EXEC sp_addlogin '$input{LoginName}','canpar','cpscan','us_english','$LoginFullName',null,6,null
go
EXEC sp_locklogin $input{LoginName}, 'unlock'
go
exit
EOF
`;

print "<BR>$sqlErrorCP1<BR>";

print "<BR>***Attempting to create a new login in Standby***<BR>";
$sqlErrorCP3 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SNew_STBY <<EOF 2>&1
use master
go
EXEC sp_addlogin '$input{LoginName}','canpar','cpscan','us_english','$LoginFullName',null,6,null
go
exit
EOF
`;

$sqlErrorCP2 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SSTBY <<EOF 2>&1
use master
go
EXEC sp_addlogin '$input{LoginName}','canpar','cpscan','us_english','$LoginFullName',null,6,null
go
exit
EOF
`;


print "<BR>$sqlErrorCP2<BR>";

print "<BR>***Attempting to create a new login in DR***<BR>";
$sqlErrorCP4 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SCPDB4 <<EOF 2>&1
use master
go
EXEC sp_addlogin '$input{LoginName}','canpar','cpscan','us_english','$LoginFullName',null,6,null
go
exit
EOF
`;

print "<BR>$sqlErrorCP4<BR>";


print "<BR><b>Setting Roles & Adding Users</b><BR>";

$sqlError1 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SPROD <<EOF 2>&1
set nocount on
go
use master
go
select "<BR><b>Adding Customer Service role...</b><BR>"
go
EXEC sp_role 'grant','cust_serv','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', cust_serv
go
select "<BR><b>Adding CMF Users role...</b><BR>"
go
EXEC sp_role 'grant','cmf_users','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', cmf_users
go
select "<BR><b>Adding HTWS role...<b><BR>"
go
EXEC sp_role 'grant','htws_role','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', htws_role
go
EXEC sp_role 'grant','rate_update_role','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', rate_update_role
go
EXEC sp_role 'grant','loomis_users','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', loomis_users
go
use cpscan
go
select "<BR><b>Adding User To cpscan...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use cmf_data
go
select "<BR><b>Adding User To cmf_data...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use rev_hist
go
select "<BR><b>Adding User To rev_hist...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use canada_post
go
select "<BR><b>Adding User To canada_post...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use liberty_db
go
select "<BR><b>Adding User To liberty_db...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use rate_update
go
select "<BR><b>Adding User To rate_update...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use lmscan
go
select "<BR><b>Adding User To lmscan...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use cmf_data_lm
go
select "<BR><b>Adding User To cmf_data_lm...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use rev_hist_lm
go
select "<BR><b>Adding User To rev_hist_lm...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use collectpickup_lm
go
select "<BR><b>Adding User To collectpickup_lm...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use linehaul_data
go
select "<BR><b>Adding User To linehaul_data...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use svp_cp
go
select "<BR><b>Adding User To sv_cp...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
use svp_lm
go
select "<BR><b>Adding User To svp_lm...</b><BR>"
go
EXEC sp_adduser '$input{LoginName}','$input{LoginName}','public'
go
exit
EOF
`;

print "<br>$sqlError1<br>";

$sqlErrorCP1 = $sqlErrorCP1.$sqlError1;

print "<BR><h2>Applying same login creation to STBY...</h2><BR>";

undef $sqlError1;


print "<br><br>========================== Results ========================<br><br>";

print "<BR><b>Setting Roles & Adding Users in Standby...</b><BR>";

$sqlError1 = `/opt/sybase/OCS-15_0/bin/isql -Usa -P\`/opt/sybase/cron_scripts/getpass.pl sa\` -SSTBY <<EOF 2>&1
set nocount on
go
use master
go
select "<BR><b>Adding Customer Service role...</b><BR>"
go
EXEC sp_role 'grant','cust_serv','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', cust_serv
go
select "<BR><b>Adding CMF Users role...</b><BR>"
go
EXEC sp_role 'grant','cmf_users','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', cmf_users
go
select "<BR><b>Adding HTWS role...<b><BR>"
go
EXEC sp_role 'grant','htws_role','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', htws_role
go
go
EXEC sp_role 'grant','rate_update_role','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', rate_update_role
go
EXEC sp_role 'grant','loomis_users','$input{LoginName}'
go
EXEC sp_modifylogin $input{LoginName}, 'add default role', loomis_users
go
exit
EOF
`;

print "<br>$sqlError1<br>";

$sqlErrorCP2 = $sqlErrorCP2.$sqlError1;

$currDate=((localtime())[5]+1900)."/".sprintf('%02d',((localtime())[4]+1))."/".sprintf('%02d',((localtime())[3]));
$currHour=sprintf('%02d',((localtime())[2]));
$currMin =sprintf('%02d',((localtime())[1]));

#`mail -s "Login Creation Occurred!!!" akhan\@canpar.com,aarain\@canpar.com,Adela.Magopat\@loomis-express.com,bsmallwood\@canpar.com <<EOF
`mail -s "Login Creation Occurred!!!" CANPARDatabaseAdministratorsStaffList\@canpar.com, bsmallwood\@canpar.com <<EOF
\*\*\*\!\!\!Login Creation Occurred\!\!\!\*\*\*

User who created the login: $user_name

Login: $input{LoginName}
$sqlErrorCP1
==============
$sqlErrorCP2
Dated: $currDate\--$currHour\:$currMin
EOF
`;

} #eof user is to be added
#
# Let's go back to the creat login page
print "<form method=\"POST\" action=\"../login.php\">
         <input type=\"hidden\" name=\"status\" value=\"verified\" />
	 <input type=\"hidden\" name=\"user_name\" value=\"$user_name\" />
	<input type=\"submit\" value=\"Do More...\">
      </form>
      
   </body>
</html>";
